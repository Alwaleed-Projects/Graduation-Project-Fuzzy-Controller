function sse = objectiveFunction(fl_params)
    % Load the fuzzy inference system
    fis = readfis('CLF02');

     % Initialize penalty
    penalty = 0;

    % Define a large penalty value
    largePenalty = 1e6;  % Adjust this value as needed

    % Check the condition a < b < c for each set of parameters
    for i = 1:3:length(fl_params)
        a = fl_params(i);
        b = fl_params(i+1);
        c = fl_params(i+2);
        
        % If the condition is violated, add the penalty
        if ~(a < b && b < c)
            sse =  + largePenalty;
        end
    end

  
     In_NG=fl_params(1:3)
     In_EZ=fl_params(4:6);
     In_PG=fl_params(7:9);
     
     In2_NG=fl_params(10:12);
     In2_EZ=fl_params(13:15);
     In2_PG=fl_params(16:18);

     Out_NG=fl_params(19:21);
     Out_EZ=fl_params(22:24);
     Out_PG=fl_params(25:27);

    fis.Inputs(1).MembershipFunctions(1).Parameters= In_NG;
    fis.Inputs(1).MembershipFunctions(2).Parameters= In_EZ;
    fis.Inputs(1).MembershipFunctions(3).Parameters= In_PG;
    
    fis.Inputs(2).MembershipFunctions(1).Parameters= In2_NG;
    fis.Inputs(2).MembershipFunctions(2).Parameters= In2_EZ;
    fis.Inputs(2).MembershipFunctions(3).Parameters= In2_PG;
    
    fis.Outputs(1).MembershipFunctions(1).Parameters= Out_NG;
    fis.Outputs(1).MembershipFunctions(2).Parameters= Out_EZ;
    fis.Outputs(1).MembershipFunctions(3).Parameters= Out_PG;
   
    % Save the modified FIS
    writeFIS(fis, 'CLF02');

    warning('off', 'fuzzy:dialogs:warnEvalfis_NoRuleFired');

    
    % Simulate the Simulink model
    sim('sim_motor');
   
    error = desiredSpeed.Data(end) - actualSpeed.Data(end);
    sse = error^2;  % If you still want to use a squared error metric

    
end
